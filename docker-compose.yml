services:
  frontend:
    image: app_front:local
    build:
      context: .
      dockerfile: docker/front.Dockerfile
    command: npm run dev
    volumes:
      - ./frontend/:/code
      - app_front_node_modules:/code/node_modules
    env_file:
      - ./secret/.env
    ports:
      - "5173:5173"
    networks:
      - app_network

  backend:
    image: app_back:local
    build:
      context: .
      dockerfile: docker/back.Dockerfile
    volumes:
      - ./backend/:/code
    env_file:
      - ./secret/.env
    ports:
      - "8080:8080"
    networks:
      - app_network

  postgres:
    image: postgres:14.11-alpine
    volumes:
      - db_data:/var/lib/postgresql/data/
    env_file:
      - ./secret/.env
    ports:
      - "5432:5432"
    networks:
      - app_network
    environment:
      - POSTGRES_USER=app_user
      - POSTGRES_PASSWORD=app_password
      - POSTGRES_DB=app_db
      - POSTGRES_HOST=postgres

  redis:
    image: redis:7
    container_name: redis_container
    ports:
      - "6379:6379"
    networks:
      - app_network

  pgadmin:
    image: dpage/pgadmin4
    container_name: pgadmin4_container
    restart: always
    ports:
      - "8888:80"
    networks:
      - app_network
    environment:
      PGADMIN_DEFAULT_EMAIL: user-name@domain-name.com
      PGADMIN_DEFAULT_PASSWORD: strong-password
    volumes:
      - pgadmin-data:/var/lib/pgadmin

volumes:
  db_data:
  app_front_node_modules:
  pgadmin-data:

networks:
  app_network:
    driver: bridge
